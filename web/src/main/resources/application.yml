
server.port: 8888

#This works for local with no TSL
spring:
  cloud:
    gateway:
#      Remove the "Forwarded" header as it doesn't seem to handle chains of proxies correctly
      forwarded:
        enabled: false
      routes:
        - id: api
          uri: "http://localhost:7777"
          predicates:
            - Path=/api/**
          filters:
            - StripPrefix=1
#            Without the line below the links generated by Spring HATEOAS are missing the /api prefix
#            - AddRequestHeader=x-forwarded-prefix, /api

---

#This works for local termination of TLS and various forwarded headers (x-forwarded-prefix excluded)
spring:
  profiles: gateway-terminates-tls

server.port: 8443
server.ssl.key-store: keystore.p12
server.ssl.key-store-password: somepassword
server.ssl.keyStoreType: PKCS12
server.ssl.keyAlias: tomcat

---

server.port: 8888

#This has issues with the "Fowarded" header when run on gcloud it doesn't seem to deal with
#chains of proxies. To get this workiung I have had to remove the "Forwarded" header
#and manually correct the "x-forwarded-port" header
spring:
  profiles: kubernetes-terminates-tls
  cloud:
    gateway:
#      default-filters:
#        - Test
      routes:
        - id: api
          uri: "http://api:7777"
          predicates:
            - Path=/api/**
          filters:
            - StripPrefix=1
            - RemoveRequestHeader=x-forwarded-port
#            Added "x-forwarded-prefix" because spring's URI Builder used by Spring HATEOS requires it
#            and I think spring cloud gateway should add it for simples cases like StripPrefix
            - AddRequestHeader=x-forwarded-prefix, /api
#            Manually fixed as it doesn't seem to work for chains of proxies, gcloud -> spring cloud gateway -> API
            - AddRequestHeader=x-forwarded-port, 443,80